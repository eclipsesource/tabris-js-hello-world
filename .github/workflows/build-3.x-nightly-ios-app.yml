name: Build 3.x iOS app

on:
  push:
  schedule:
    - cron:  '15 5 * * *'
  repository_dispatch:
    types:
      - build-3.x-nightly-ios

jobs:
  build-ios:
    runs-on: macos-latest
    name: Build Tabris.js Hello World iOS
    strategy:
      matrix:
        build_type: [release, development]
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 3.x-nightly
          path: tabris-js-hello-world
          fetch-depth: 1

      - name: Decrypt secrets
        env:
          OPENSSL_PASSPHRASE: ${{ secrets.ENCRYPTION_KEY }}
        run: |
          openssl aes-256-cbc -in tabris-js-hello-world/.github/workflows/ios/gha_eclipsesource_match-certificates.enc -out gha_eclipsesource_match-certificates -pass pass:$OPENSSL_PASSPHRASE -d -md md5
          openssl aes-256-cbc -in tabris-js-hello-world/.github/workflows/ios/gha_build-ios_env.sh.enc                 -out gha_build-ios_env.sh                 -pass pass:$OPENSSL_PASSPHRASE -d -md md5

      - name: Prepare keychain
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          source gha_build-ios_env.sh

          security create-keychain -p $MATCH_KEYCHAIN_PASSWORD $MATCH_KEYCHAIN_NAME
          security unlock-keychain -p $MATCH_KEYCHAIN_PASSWORD $MATCH_KEYCHAIN_NAME
          security set-keychain-settings -u -t 3600 $MATCH_KEYCHAIN_NAME
          security list-keychains -d user -s $MATCH_KEYCHAIN_NAME

          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          chmod 0600 gha_eclipsesource_match-certificates
          ssh-add gha_eclipsesource_match-certificates

          if [[ "${{ matrix.build_type }}" -eq "release" ]]; then
            fastlane match appstore --readonly --app_identifier com.eclipsesource.hello.world
          else
            fastlane match development --readonly --app_identifier com.eclipsesource.*
          fi

          ssh-add -D
          rm gha_eclipsesource_match-certificates

      - name: Install tabris-cli
        run: npm install -g tabris-cli

      - name: Build tabris-js-hello-world
        env:
          TABRIS_BUILD_KEY: ${{ secrets.TABRIS_BUILD_KEY }}
        run: |
          cd tabris-js-hello-world
          npm install
          source ../gha_build-ios_env.sh
          export BUILD_NUMBER="$(date +%y%m%d%H%M).3"
          echo BUILD_NUMBER $BUILD_NUMBER

          if [[ "${{ matrix.build_type }}" -eq "release" ]]; then
            tabris build ios --release --device --verbose
          else
            tabris build ios --debug --device --verbose
          fi

      - name: AppStore Upload
        if: ${{ matrix.build_type == 'release' }}
        run: |
          source gha_build-ios_env.sh
          xcrun altool --upload-app --type ios \
            --file tabris-js-hello-world/build/cordova/platforms/ios/build/device/*.ipa \
            --username $FASTLANE_USER \
            --password '@env:FASTLANE_PASSWORD'
          rm gha_build-ios_env.sh

      - name: Cleanup
        if: always()
        run: rm -Rf *